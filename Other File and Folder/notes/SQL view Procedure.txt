Create view :::


 create view v1 as select u.*,e.salary,d.name as department from user u join emp e on u.id=e.id join dept d on d.id = e.dept ;
 select * from v1;
 insert into v1(id,name,age,phone,address,salary,department) values(1,'vinod',23,32324243,'205 Meena', 43000,3);
  ERROR 1393 (HY000): Can not modify more than one base table through a join view 'batch419.v1'



 create view v2 as(select * from user where id in(select id from emp));
 insert into v2 values(11,'vinod',32,245454545,'205 meena');
	Query OK, 1 row affected (0.003 sec)






Delete from View not from actual Table::: 


MariaDB [batch419]> select * from v2;
+----+---------+------+------------+--------------+
| id | name    | age  | phone      | address      |
+----+---------+------+------------+--------------+
|  1 | Alice   |   30 | 1234567890 | 123 Main St  |
|  2 | Bob     |   35 | 2345678901 | 456 Oak St   |
|  6 | Mukesh  |   45 |  434563636 | 304,andheri  |
|  8 | Nilesh  |   23 |    7878796 | 433 mulund   |
|  3 | Charlie |   28 | 3456789012 | 789 Pine St  |
|  4 | David   |   40 | 4567890123 | 101 Maple St |
|  7 | kailash |   32 |    3423636 | 102 boriwali |
|  5 | Eve     |   25 | 5678901234 | 202 Birch St |
+----+---------+------+------------+--------------+
delete from v2 where id = 9;
	Query OK, 0 rows affected (0.000 sec)
MariaDB [batch419]> select * from v2;
+----+---------+------+------------+--------------+
| id | name    | age  | phone      | address      |
+----+---------+------+------------+--------------+
|  1 | Alice   |   30 | 1234567890 | 123 Main St  |
|  2 | Bob     |   35 | 2345678901 | 456 Oak St   |
|  6 | Mukesh  |   45 |  434563636 | 304,andheri  |
|  3 | Charlie |   28 | 3456789012 | 789 Pine St  |
|  4 | David   |   40 | 4567890123 | 101 Maple St |
|  7 | kailash |   32 |    3423636 | 102 boriwali |
|  5 | Eve     |   25 | 5678901234 | 202 Birch St |
+----+---------+------+------------+--------------+
7 rows in set (0.000 sec)

MariaDB [batch419]> select * from user;;
+----+---------+------+------------+--------------+
| id | name    | age  | phone      | address      |
+----+---------+------+------------+--------------+
|  1 | Alice   |   30 | 1234567890 | 123 Main St  |
|  2 | Bob     |   35 | 2345678901 | 456 Oak St   |
|  3 | Charlie |   28 | 3456789012 | 789 Pine St  |
|  4 | David   |   40 | 4567890123 | 101 Maple St |
|  5 | Eve     |   25 | 5678901234 | 202 Birch St |
|  6 | Mukesh  |   45 |  434563636 | 304,andheri  |
|  7 | kailash |   32 |    3423636 | 102 boriwali |
|  8 | Nilesh  |   23 |    7878796 | 433 mulund   |
|  9 | Meeran  |   25 |  282839392 | 12,Bandra    |
| 10 | Rahul   |   22 |  949493393 | 113 Virar    |
| 11 | vinod   |   32 |  245454545 | 205 meena    |
+----+---------+------+------------+--------------+
11 rows in set (0.000 sec)









Update view as well as actual table:::




MariaDB [batch419]> select * from user;
+----+---------+------+------------+--------------+
| id | name    | age  | phone      | address      |
+----+---------+------+------------+--------------+
|  1 | Alice   |   30 | 1234567890 | 123 Main St  |
|  2 | Bob     |   35 | 2345678901 | 456 Oak St   |
|  3 | Charlie |   28 | 3456789012 | 789 Pine St  |
|  4 | David   |   40 | 4567890123 | 101 Maple St |
|  5 | Eve     |   25 | 5678901234 | 202 Birch St |
|  6 | Mukesh  |   45 |  434563636 | 304,andheri  |
|  7 | kailash |   32 |    3423636 | 102 boriwali |
|  8 | Nilesh  |   23 |    7878796 | 433 mulund   |
|  9 | Meeran  |   25 |  282839392 | 12,Bandra    |
| 10 | Rahul   |   22 |  949493393 | 113 Virar    |
| 11 | vinod   |   32 |  245454545 | 205 meena    |
+----+---------+------+------------+--------------+
11 rows in set (0.000 sec)

MariaDB [batch419]> delete from v2 where id =1;
ERROR 1451 (23000): Cannot delete or update a parent row: a foreign key constraint fails (`batch419`.`emp`, CONSTRAINT `emp_ibfk_1` FOREIGN KEY (`id`) REFERENCES `user` (`id`))
MariaDB [batch419]> desc v1;
+------------+-------------+------+-----+---------+-------+
| Field      | Type        | Null | Key | Default | Extra |
+------------+-------------+------+-----+---------+-------+
| id         | int(11)     | NO   |     | NULL    |       |
| name       | varchar(20) | YES  |     | NULL    |       |
| age        | int(3)      | YES  |     | NULL    |       |
| phone      | bigint(20)  | YES  |     | NULL    |       |
| address    | varchar(50) | YES  |     | NULL    |       |
| salary     | int(11)     | YES  |     | NULL    |       |
| department | varchar(20) | YES  |     | NULL    |       |
+------------+-------------+------+-----+---------+-------+
7 rows in set (0.014 sec)

MariaDB [batch419]> update v1 set name='oggy' where name = 'bob';
Query OK, 1 row affected (0.004 sec)
Rows matched: 1  Changed: 1  Warnings: 0

MariaDB [batch419]> select * from v1;
+----+---------+------+------------+--------------+--------+-------------+
| id | name    | age  | phone      | address      | salary | department  |
+----+---------+------+------------+--------------+--------+-------------+
|  1 | Alice   |   30 | 1234567890 | 123 Main St  |  50000 | HR          |
|  2 | oggy    |   35 | 2345678901 | 456 Oak St   |  60000 | Engineering |
|  6 | Mukesh  |   45 |  434563636 | 304,andheri  |  27000 | Engineering |
|  3 | Charlie |   28 | 3456789012 | 789 Pine St  |  55000 | Marketing   |
|  4 | David   |   40 | 4567890123 | 101 Maple St |  70000 | Finance     |
|  5 | Eve     |   25 | 5678901234 | 202 Birch St |  65000 | Sales       |
+----+---------+------+------------+--------------+--------+-------------+
6 rows in set (0.000 sec)

MariaDB [batch419]> select * from user;
+----+---------+------+------------+--------------+
| id | name    | age  | phone      | address      |
+----+---------+------+------------+--------------+
|  1 | Alice   |   30 | 1234567890 | 123 Main St  |
|  2 | oggy    |   35 | 2345678901 | 456 Oak St   |
|  3 | Charlie |   28 | 3456789012 | 789 Pine St  |
|  4 | David   |   40 | 4567890123 | 101 Maple St |
|  5 | Eve     |   25 | 5678901234 | 202 Birch St |
|  6 | Mukesh  |   45 |  434563636 | 304,andheri  |
|  7 | kailash |   32 |    3423636 | 102 boriwali |
|  8 | Nilesh  |   23 |    7878796 | 433 mulund   |
|  9 | Meeran  |   25 |  282839392 | 12,Bandra    |
| 10 | Rahul   |   22 |  949493393 | 113 Virar    |
| 11 | vinod   |   32 |  245454545 | 205 meena    |
+----+---------+------+------------+--------------+
11 rows in set (0.000 sec)

MariaDB [batch419]>







Check Option in View 




MariaDB [batch419]> CREATE TABLE t1 (a INT);
ERROR 1050 (42S01): Table 't1' already exists
MariaDB [batch419]> CREATE VIEW v1 AS SELECT * FROM t1 WHERE a < 2
    -> WITH CHECK OPTION;
Query OK, 0 rows affected (0.005 sec)

MariaDB [batch419]> CREATE VIEW v2 AS SELECT * FROM v1 WHERE a > 0
    -> WITH LOCAL CHECK OPTION;
Query OK, 0 rows affected (0.015 sec)

MariaDB [batch419]> CREATE VIEW v3 AS SELECT * FROM v1 WHERE a > 0
    -> WITH CASCADED CHECK OPTION;
Query OK, 0 rows affected (0.005 sec)

MariaDB [batch419]> INSERT INTO v2 VALUES (2);
Query OK, 1 row affected (0.004 sec)

MariaDB [batch419]> INSERT INTO v1 VALUES (2);
ERROR 1369 (44000): CHECK OPTION failed `batch419`.`v1`
MariaDB [batch419]> INSERT INTO v2 VALUES (0);
ERROR 1369 (44000): CHECK OPTION failed `batch419`.`v2`
MariaDB [batch419]> INSERT INTO v3 VALUES (0);
ERROR 1369 (44000): CHECK OPTION failed `batch419`.`v3`
MariaDB [batch419]> INSERT INTO v3 VALUES (2);
ERROR 1369 (44000): CHECK OPTION failed `batch419`.`v3`
MariaDB [batch419]>






https://dev.mysql.com/doc/refman/8.4/en/view-updatability.html













Stored Procedure

First, find the stored procedure by its name in the database catalog.
Second, compile the code of the stored procedure.
Third, store the compiled stored procedure in a cache memory area.
Finally, execute the stored procedure.



CREATE PROCEDURE sp_name(parameter_list)
BEGIN
   statements;
END;
In this syntax:

First, define the name of the stored procedure sp_name after the CREATE PROCEDURE keywords.
Second, specify the parameter list (parameter_list) inside the parentheses followed by the stored procedure’s name. If the stored procedure has no parameters, you can use an empty parentheses ().
Third, write the stored procedure body that consists of one or more valid SQL statements between the BEGIN and END block.









Call 
	In this syntax:

First, provide the name of the stored procedure that you want to execute after the CALL keyword.
Second, if the stored procedure has parameters, you need to pass the arguments to it in parentheses () after the stored procedure’s name.







Introduction to MySQL stored procedure parameters
A parameter in a stored procedure has one of three modes: IN, OUT, or INOUT.

Syntax
[IN | OUT | INOUT] parameter_name datatype[(length)]


First, specify the parameter mode, which can be IN , OUT or INOUT depending on the purpose of the parameter in the stored procedure.
Second, provide the name of the parameter. The parameter name must follow the naming rules of the column name in MySQL.
Third, define the data type and maximum length of the parameter.


CREATE PROCEDURE GetOrderCountByStatus (
	IN  orderStatus VARCHAR(25),
	OUT total INT
)
BEGIN
	SELECT COUNT(orderNumber)
	INTO total
	FROM orders
	WHERE status = orderStatus;
END$$

DELIMITER ;





CALL GetOrderCountByStatus('Shipped',@total);
SELECT @total;




INOUT Exmaple

DELIMITER $$

CREATE PROCEDURE SetCounter(
	INOUT counter INT,
    IN inc INT
)
BEGIN
	SET counter = counter + inc;
END$$

DELIMITER ;


SET @counter = 1;
CALL SetCounter(@counter,1); -- 2
CALL SetCounter(@counter,1); -- 3
CALL SetCounter(@counter,5); -- 8
SELECT @counter; -- 8







Drop Procedure
First, specify the name of the stored procedure (sp_name) that you want to delete after the DROP PROCEDURE keywords.
Second, use IF EXISTS option to conditionally drop the stored procedure if it exists.

DROP PROCEDURE [IF EXISTS] sp_name;





Show Procedure:::
SHOW CREATE PROCEDURE GetEmployees\G







Declare Variable inside Procedure

Declaring variables
To declare a variable inside a stored procedure, you use the DECLARE  statement as follows:

DECLARE variable_name datatype(size) [DEFAULT default_value];
Code language: SQL (Structured Query Language) (sql)
In this syntax:

First, specify the name of the variable after the DECLARE keyword. Ensure the variable name adheres to MySQL table column naming rules.
Second, define the data type and length of the variable. Variables can have any MySQL data type, such as INT, VARCHAR , and DATETIME.
Third, assign a default value to the variable using the DEFAULT option. If you declare a variable without specifying a default value, its default value is NULL.


eg 
DECLARE totalSale DEC(10,2) DEFAULT 0.0;
DECLARE totalQty, stockCount INT DEFAULT 0;






Assigning variables
To assign a variable a value, you use the SET statement:

SET variable_name = value;
Code language: SQL (Structured Query Language) (sql)
For example:

DECLARE total INT DEFAULT 0;
SET total = 10;